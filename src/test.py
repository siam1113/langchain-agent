import uiModelGenerator

dom= """<div><div class="context-info-branding"><a class="info-item" data-qa="topmenu-patient" href="/Practice_Management/Patient/ViewPatientIdentification/1795"> <span class="title branding-color">Patient</span> <span class="content branding-color" data-badge="">Kathlyn Mante (1797)</span> </a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-dob" href="/Practice_Management/Patient/ViewPatientDemographics/1795"> <span class="title branding-color">DOB</span> <span class="content branding-color" data-badge="">9/9/1999 (25y)</span> </a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-lastappt" href="/Practice_Management/Patient/AppointmentHistory/1795"> <span class="title branding-color">Last Appt</span> <span class="content branding-color" data-badge="">N/A</span> </a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-nextappt" href="/Schedule/Availability"> <span class="title branding-color">Next Appt</span> <span class="content branding-color" data-badge="">N/A</span> </a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-ptbalance" href="/Practice_Management/Patient/AccountLedger/1795#/entries"><span class="title branding-color">Pt Balance</span> <span class="content branding-color" data-badge="">-$500.00</span></a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-insurance" href="/Practice_Management/InsurancePolicy/PatientInsurance/1795"> <span class="title branding-color">Insurance</span> <span class="content branding-color" data-badge="">No Insurance</span> </a><div class="vl-separator"></div><a class="info-item" data-qa="topmenu-copay" href="/PointOfSale"> <span class="title branding-color">Copay</span> <span class="content branding-color" data-badge="">N/A</span> </a><div class="vl-separator"></div></div><span class="tooltip" id="patient-context-info-tooltip"></span></div>"""
prompt="""I have an HTML structure for a web component, and I need to generate a Typescript, Playwright-based UI Model similar to the one below, using the structure and logic of the example. The UI Model should be able to interact with the component by finding locators and performing actions like clicking or navigating. Here’s an example UI model to follow: typescript Copy code import { Locator, Page } from '@playwright/test'; import { UIModel, UIModelComponents } from '@ui-models/uimodel'; interface SideMenuLocators { root: Locator; logout: Locator; } const selectors = { root: 'nav.sidenav', logoutLink: 'side-nav-logout' }; export class SideMenu extends UIModel<SideMenuLocators, {}> { constructor(page: Page, self: Locator = null, parent: Locator = null) { const root = UIModel.findRoot(page, self, parent, selectors.root); const locators: SideMenuLocators = { root, logout: root.getByTestId(selectors.logoutLink) }; const params: UIModelComponents<SideMenuLocators, {}> = { page, root, selectors: selectors, locators, components: {} }; super(params); } async logout(): Promise<void> { await this.locators.logout.click() } } Now, I want you to generate a similar UI Model for the following HTML component I give you later. The component may have a root element, links, buttons, or other interactive elements. Ensure the generated code: Follows the pattern of the example model above. Uses UIModel.findRoot to find the component’s root element. Defines locators using the Locator object for any actionable elements in the component. Contains methods to interact with the component (like clicking buttons, submitting forms, etc.). Note: Just spit out the UI model without any explanation"""

uimodel = uiModelGenerator.generate(prompt, dom);

print(uimodel)